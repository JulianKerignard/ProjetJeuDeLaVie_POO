    class Grid {
        -int rows
        -int columns
        -vector<Cell> cells
        +Grid(int rows, int columns)
        +loadFromFile(string filename)
        +updateGrid()
        +getCell(int x, int y) : Cell&
        +displayConsole()
        +displayGraphical()
        +evolve(Grid& grid)
    }

    class Cell {
        -bool isAlive
        -bool isObstacle
        -int x
        -int y
        +Cell(bool state, int x, int y)
        +getState() : bool
        +setState(bool state)
        +getNeighborsCount(Grid& grid) : int
    }

    class GameManager {
        -Grid gameGrid
        -int maxIterations
        -bool toroidalMode
        +GameOfLife(string inputFile)
        +runConsoleMode()
        +runGraphicalMode()
        +saveIteration(int iterationNumber)
    }

    class GraphicalInterface {
        -sf::RenderWindow window
        -Grid& gameGrid
        +GraphicalInterface(Grid& grid)
        +drawGrid()
        +handleEvents()
        +updateDisplay()
        +setIterationSpeed()
    }

    Grid "1" *-- "many" Cell : contains
    GameManager "1" *-- "1" Grid : manage
    GameManager "1" -- "1" GraphicalInterface : uses //